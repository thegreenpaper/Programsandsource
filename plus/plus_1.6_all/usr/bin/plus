#!/bin/sh
## Config
usedefaults="true"
musicfolder="$HOME/Music/plus"
volume=70
dmenucolor="#111c26"
dmenufont="Jetbrains Mono"
terminal="$TERM"

## Documentation

playform="
Playlist Formatting:
        A playlist is a text file in the \$musicfolder which is curently $musicfolder
        You can edit your \$musicfolder in this scripts top lines of code, just find '\$musicfolder=$musicfolder' and edit
        To add a song to a playlist you would add a line that says anything, then you would add air quotes \"\", and inside them you would write the path to the song
        example:
                Song - Artist \"path/to/musicfile.mp3\"
        The path can lead to a location on your computer or be a link to the file/youtube video on the internet
        Any text you put outside the air quotes have no effect and are only there for you to be able to know what song it is
        Any text in the same line and after a # will be ignored
        example:
		Song1 - Artist1 \"path/to/musicfile.mp3\"
                # You can write whatever I want after a '#' and it wont show up as a song
		Song2 - Artist2 \"https://link.to/music\"
	result:
		Song1 - Artist1 \"path/to/musicfile.mp3\"
		Song2 - Artist2 \"https://link.to/music\""
playsel="
Selecting A Playlist:
        To choose a playlist you would type you preferred playlist in the second argument
        or run 'plus cl'
        if a playlist is not selected, all songs from all playlists will be included"
usargs="
Useable Arguments:
        help    Displays this prompt
        pl      You can choose and play a song
        cl      You can choose a playlist to choose a song from
        pf      Plays your selected amount of random songs
	fl	Plays a selected song, from a selected playlist, all done in the terminal, the selected song is put in the third argument (\$3)
        list    List all playlists
        add     Adds the statment in the third argument to the selected playlist
	create	Searches the directory in the third argument (\$3) and creates a playlist with all the files there. This should only be used on folders/directories with only music files.
	stop	kills all plus prosesess
	skip	skips a song if you ran 'plus pf' if not, it stops playing the song
        *       If none of the argument above have been seleced, it will automaticly run 'plus pl'"

documentation="$playform
$playsel
$usargs"


## Program

case "$usedefaults" in
	false) mennu () {
		case $1 in
			i) dmenu -nb "$dmenucolor" -fn "$dmenufont" -i -p "$2" ;;
			l) dmenu -nb "$dmenucolor" -fn "$dmenufont" -l 10 -i -p "$2" ;;
		esac
		} ;;
	true) mennu () {
		case $1 in
			i) dmenu -i -p "$2" ;;
			l) dmenu -l 10 -i -p "$2" ;;
		esac
		} ;;
esac

musicfile=$(
case "$1" in
	cl) 
		ls $musicfolder | mennu i 'Choose playlist' | sed "s|^|$musicfolder/|" ;;
	*)
		case "$2" in
			[a-zA-Z0-9_.-]*) echo "$musicfolder/$2" ;;
			*) echo $(ls $musicfolder | sed "s|^|$musicfolder/|" | tr "\n" " ") ;;
		esac
esac
)

readit () {
cat $@ | sort -u | shuf | sed 's|#.*$||' | sed -r '/^\s*$/d'
}

craite () {
files=$(find "$1" -maxdepth 1 -type f | sed 's| |\\\\\\ |' | xargs realpath)
files=$(echo "$files" | sed -E 's|(.*)|\1 "\1"|;s|.*/(.* ")|\1|;s|\.[^\.\.]* "| "|')
[ -z "$2" ] && echo "$files" > PlayList || echo "$files" > $2 || echo failed
}

case "$1" in

	# Play for:
	pf)
		countin="false"
		case "$3" in
			[0-9]*) amount=$3 && countin="true";;
			*)	
				amount=$(echo "" | mennu i 'How many times') && countin="true"
		esac
		case "$countin" in
			true)
				for i in $(seq 1 $amount | tr "\n" " ")
				do
					song=$(readit $musicfile | grep -o '\".*\"' | sed 's|"||g' | shuf -n 1)
					echo "Playing: \"$song\" in \"$terminal\""
					mpv --volume=$volume --no-video "$song" 
				done
		esac 
		;;
	fl)
		song=$(readit $musicfile | grep "$3" | grep -o '\".*\"' | sed 's|"||g' | shuf -n 1)
		echo "Playing: \"$song\" in \"$terminal\""
		mpv --volume=$volume --no-video "$song"
		;;

	# List musicfolder:
	list) ls $musicfolder ;;

	# List runnable commands 
	*help)
		case "$2" in
			formating) echo "$playform" ;;
			playlis[a-zA-Z0-9_.-]*) echo "$playsel" ;;
			argumen[a-zA-Z0-9_.-]*) echo "$usargs" ;;
			*) echo "$documentation" ;;
		esac ;;
	add) 
		case "$2" in
                        [a-zA-Z0-9_.-]*)
				case "$3" in
					[a-zA-Z0-9_.-][a-zA-Z0-9_.-]*) echo "$3" >> $musicfolder/$2 ;;
					*) echo "Failed: please input the line to add in the third argument (\$3)" ;;
				esac ;;
                        *) echo "failed" ;;
                esac ;;
	create) craite $2 $3 ;;
	stop) killall plus mpv ;;
	skip) killall mpv ;;

	# Run normaly:
	*)
		chosevolume () {
			case "$continue" in
				true) echo "70\n100\n90\n80\n60\n50\n40\n30\n20\n10\n1" | mennu l 'choose volume' ;;
			esac
		}
		voa=$(echo "Audio\nVideo+Audio\nAudio+VolumeControl\nAudio+Terminal" | mennu i 'Choose Format') &&
		choice=$(readit $musicfile | mennu l 'Choose Song:') && continue="true"
		song=$(echo "$choice" | grep -o '\".*\"' | sed 's|"||g')
		echo "Playing: \"$song\" in \"$terminal\""
		case "$voa" in
			Audio) mpv --volume=$volume --no-video "$song" ;;
			Video+Audio) mpv --volume=$volume "$song" ;;
			Audio+VolumeControl) mpv --volume=$(chosevolume) --no-video "$song" ;;
			Audio+Terminal) echo "--volume=$volume --no-video $song" | xargs $terminal -e mpv
		esac ;;
esac
